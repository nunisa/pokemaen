{"version":3,"sources":["assets/images/broken-pokeball.png","components/Filters/Filters.jsx","components/Filters/index.js","components/Pagination/Pagination.jsx","components/Pagination/index.js","components/Skeletons/Skeletons.jsx","components/DetailsCard/DetailsCard.jsx","components/DetailsCard/index.js","components/Cards/index.js","components/Cards/Cards.jsx","assets/utils/apiEndpointMethods.js","components/Home/Home.jsx","components/Home/index.js","components/DetailInfo/DetailInfo.jsx","components/DetailInfo/index.js","components/NotFound/NotFound.jsx","components/NotFound/index.js","components/App/index.js","components/App/App.jsx","reportWebVitals.js","index.js"],"names":["muiStyles","makeStyles","theme","displayType","display","flexDirection","justifyContent","alignItems","flexGrow","searchBox","marginRight","spacing","breakpoints","down","Filters","props","muiClasses","pokemons","filtered","onSearchChange","onSortByChange","useState","searchNameStr","setSearchNameStr","searchAbleStr","setSearchAbleStr","sortByValue","setSortByValue","sortByInputValue","setSortByInputValue","handleSearchChange","name","e","newStr","target","value","newPokemons","_","cloneDeep","getAndSetPokeDetailsByName","getAndSetPokeDetailsByAbilities","results","noAbleStr","filter","item","includes","toLowerCase","noNameStr","promises","reduce","arr","push","fetch","url","then","res","json","Promise","all","abilities","forEach","able","is_hidden","ability","species","replace","sortPokemons","newValue","needle","sort","a","b","sorted","map","length","Grid","container","xs","md","TextField","fullWidth","variant","size","id","label","className","onChange","Autocomplete","options","defaultValue","inputValue","renderInput","params","getOptionSelected","option","onInputChange","newInputValue","selectPageSize","marginLeft","prevNext","mr1075","mr2","Pagination","limit","offset","onSizeChange","onBtnClick","handlePrevNext","newOffset","count","Box","component","Select","MenuItem","Tooltip","title","arrow","IconButton","disabled","onClick","mediaImg","margin","marginBottom","details","padding","DetailsSkeleton","Card","CardActionArea","CardContent","Skeleton","width","height","card","transform","transition","cardActionArea","cardMediaContainer","overflow","pokemonName","textTransform","fontSize","sizeSpec","chipContainer","marginTop","ml","dot","backgroundColor","palette","text","secondary","borderRadius","withRouter","pokemon","pokemaenApiUtils","setDetails","useEffect","getPokemonByName","data","weight","sprites","Object","keys","history","CardMedia","image","other","front_default","alt","Typography","gutterBottom","color","capChartAt0","split","ab","slice","toUpperCase","join","Chip","Math","random","toString","DetailsCard","Cards","sm","Array","fill","PokemaenApiUtils","this","domain","process","Error","apiKey","mergeQueryParams","parameters","queryParameters","$queryParameters","parameterName","parameter","prototype","request","method","body","headers","form","deferred","queryParams","str","p","hasOwnProperty","encodeURIComponent","serializeQueryParams","urlWithParams","undefined","JSON","stringify","response","ok","status","statusText","resolve","catch","error","reject","getAllPokemons","Q","defer","promise","path","mainContainer","topContent","mainGridContainer","filtersContainer","paginationGridItem","middleContent","bottomContent","Home","setPokemons","setFiltered","setLimit","setOffset","handlePageSizeChange","newLimit","newResults","position","top","left","border","backToHome","DetailInfo","match","pname","Button","startIcon","img","backgroundImage","require","default","backgroundRepeat","backgroundSize","backgroundPosition","NotFound","App","basename","CssBaseline","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7edbc4d7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/broken-pokeball.0c792856.png\";","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash/fp';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\n\n// MUI custom styles\nconst muiStyles = makeStyles(theme => ({\n    displayType: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexGrow: 1\n    },\n    searchBox: {\n        marginRight: theme.spacing(4),\n        [theme.breakpoints.down('sm')]: {\n            marginRight: 0\n        }\n    }\n}));\n\nconst Filters = props => {\n    const muiClasses = muiStyles();\n    const { pokemons, filtered, onSearchChange, onSortByChange } = props;\n    const [searchNameStr, setSearchNameStr] = useState('');\n    const [searchAbleStr, setSearchAbleStr] = useState('');\n    const [sortByValue, setSortByValue] = useState('');\n    const [sortByInputValue, setSortByInputValue] = useState('');\n\n    const handleSearchChange = name => e => {\n        const newStr = e.target.value;\n        if (pokemons) {\n            const newPokemons = _.cloneDeep(pokemons);\n            if (newStr) {\n                if (name === 'name') {\n                    getAndSetPokeDetailsByName(newPokemons, newStr);\n                } else {\n                    getAndSetPokeDetailsByAbilities(newPokemons, newStr);\n                }\n            } else {\n                if (name === 'name' && !searchNameStr && searchAbleStr) {\n                    getAndSetPokeDetailsByAbilities(\n                        newPokemons,\n                        searchAbleStr,\n                        true\n                    );\n                } else if (\n                    name === 'abilities' &&\n                    searchNameStr &&\n                    !searchAbleStr\n                ) {\n                    getAndSetPokeDetailsByName(\n                        newPokemons,\n                        searchNameStr,\n                        true\n                    );\n                } else {\n                    setSearchNameStr('');\n                    setSearchAbleStr('');\n                    onSearchChange(pokemons.results);\n                }\n            }\n        }\n    };\n    const getAndSetPokeDetailsByName = (\n        newPokemons,\n        newStr,\n        noAbleStr = false\n    ) => {\n        if (noAbleStr) {\n            setSearchAbleStr('');\n        }\n        setSearchNameStr(newStr);\n        onSearchChange(\n            newPokemons.results.filter(item =>\n                item.name.includes(newStr.toLowerCase())\n            )\n        );\n    };\n    const getAndSetPokeDetailsByAbilities = (\n        newPokemons,\n        newStr,\n        noNameStr = false\n    ) => {\n        const promises = newPokemons.results.reduce((arr, item) => {\n            arr.push(fetch(item.url).then(res => res.json()));\n\n            return arr;\n        }, []);\n        Promise.all(promises).then(res => {\n            const results = res.reduce((arr, item) => {\n                item.abilities.forEach(able => {\n                    if (\n                        !able.is_hidden &&\n                        able.ability.name.includes(newStr.toLowerCase())\n                    ) {\n                        arr.push({\n                            ...item.species,\n                            url: item.species.url.replace('-species', '')\n                        });\n                    }\n                });\n\n                return arr;\n            }, []);\n            if (noNameStr) {\n                setSearchNameStr('');\n            }\n            setSearchAbleStr(newStr);\n            onSearchChange(results);\n        });\n    };\n    const handleSortByChange = (e, newValue) => {\n        setSortByValue(newValue || '');\n        if (pokemons && filtered) {\n            const newPokemons = _.cloneDeep(filtered);\n            sortPokemons(newPokemons, newValue);\n        }\n    };\n    const sortPokemons = (newPokemons, newValue) => {\n        const needle = (newValue && newValue.toLowerCase()) || '';\n        if (newValue) {\n            if (newValue === 'Name') {\n                onSortByChange(\n                    newPokemons.results.sort((a, b) =>\n                        a.name > b.name ? 1 : -1\n                    )\n                );\n            } else if (newValue === 'Height' || newValue === 'Weight') {\n                const promises = newPokemons.results.reduce((arr, item) => {\n                    arr.push(fetch(item.url).then(res => res.json()));\n\n                    return arr;\n                }, []);\n                Promise.all(promises).then(res => {\n                    const sorted = res.sort((a, b) =>\n                        a[needle] > b[needle] ? -1 : 1\n                    );\n                    onSortByChange(\n                        sorted.map(item => ({\n                            ...item.species,\n                            url: item.species.url.replace('-species', '')\n                        }))\n                    );\n                });\n            }\n        } else {\n            if (filtered.results.length) {\n                onSortByChange(filtered.results);\n            } else {\n                onSortByChange(newPokemons.results);\n            }\n        }\n    };\n    const handleSortByInputChange = (e, newInputValue) => {\n        setSortByInputValue(newInputValue);\n    };\n\n    return (\n        <>\n            <Grid container item xs={12} md={4}>\n                <TextField\n                    fullWidth\n                    variant=\"outlined\"\n                    size=\"small\"\n                    id=\"search-by-name\"\n                    label=\"Search By Name\"\n                    className={muiClasses.searchBox}\n                    value={searchNameStr}\n                    onChange={handleSearchChange('name')}\n                />\n            </Grid>\n            <Grid container item xs={12} md={4}>\n                <TextField\n                    fullWidth\n                    variant=\"outlined\"\n                    size=\"small\"\n                    id=\"search-by-abilities\"\n                    label=\"Search By Abilities\"\n                    className={muiClasses.searchBox}\n                    value={searchAbleStr}\n                    onChange={handleSearchChange('abilities')}\n                />\n            </Grid>\n            <Grid container item xs={12} md={4}>\n                <Autocomplete\n                    fullWidth\n                    size=\"small\"\n                    id=\"sort-by-select\"\n                    options={['Name', 'Height', 'Weight']}\n                    defaultValue={null}\n                    value={sortByValue}\n                    inputValue={sortByInputValue}\n                    renderInput={params => (\n                        <TextField\n                            {...params}\n                            label=\"Sort By\"\n                            variant=\"outlined\"\n                        />\n                    )}\n                    getOptionSelected={(option, value) =>\n                        option === value || value === ''\n                    }\n                    onChange={handleSortByChange}\n                    onInputChange={handleSortByInputChange}\n                />\n            </Grid>\n        </>\n    );\n};\n\nFilters.propTypes = {\n    pokemons: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    onSearchChange: PropTypes.func.isRequired,\n    onSortByChange: PropTypes.func.isRequired\n};\n\nexport default Filters;\n","import Filters from './Filters.jsx';\n\nexport default Filters;\n","import PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\n// MUI custom styles\nconst muiStyles = makeStyles(theme => ({\n    selectPageSize: {\n        marginLeft: 'auto',\n        [theme.breakpoints.down('sm')]: {\n            marginLeft: 0\n        }\n    },\n    prevNext: {\n        '& > span': {\n            display: 'inline-flex',\n            '&:nth-child(1)': {\n                marginRight: theme.spacing(2)\n            }\n        }\n    },\n    mr1075: {\n        marginRight: theme.spacing(1.75)\n    },\n    mr2: {\n        marginRight: theme.spacing(2)\n    }\n}));\n\nconst Pagination = props => {\n    const muiClasses = muiStyles();\n    const { limit, offset, filtered, onSizeChange, onBtnClick } = props;\n\n    const handlePageSizeChange = e => {\n        onSizeChange(e.target.value);\n    };\n    const handlePrevNext = name => () => {\n        let newOffset = offset;\n        if (name === 'next') {\n            newOffset += limit;\n            newOffset =\n                newOffset >= filtered.count ? filtered.count : newOffset;\n        } else {\n            newOffset -= limit;\n            newOffset = newOffset < limit ? 0 : newOffset;\n        }\n        onBtnClick(newOffset);\n    };\n\n    return (\n        <>\n            <Box className={muiClasses.selectPageSize}>\n                <Box component=\"span\" className={muiClasses.mr2}>\n                    Show\n                </Box>\n                <Select\n                    value={limit}\n                    onChange={handlePageSizeChange}\n                    className={muiClasses.mr1075}\n                    id=\"limit-per-page\"\n                >\n                    {[10, 20, 50].map(item => (\n                        <MenuItem key={item} value={item}>\n                            {item}\n                        </MenuItem>\n                    ))}\n                </Select>\n                <Box component=\"span\" className={muiClasses.mr2}>\n                    per page\n                </Box>\n            </Box>\n            <Box className={muiClasses.prevNext}>\n                <Tooltip title=\"Previous\" arrow>\n                    <Box component=\"span\">\n                        <IconButton\n                            disabled={!filtered || (filtered && offset <= 0)}\n                            onClick={handlePrevNext('prev')}\n                        >\n                            <ArrowBackIosIcon />\n                        </IconButton>\n                    </Box>\n                </Tooltip>\n                <Tooltip title=\"Next\" arrow>\n                    <Box component=\"span\">\n                        <IconButton\n                            disabled={\n                                !filtered ||\n                                (filtered && offset >= filtered.count)\n                            }\n                            onClick={handlePrevNext('next')}\n                        >\n                            <ArrowForwardIosIcon />\n                        </IconButton>\n                    </Box>\n                </Tooltip>\n            </Box>\n        </>\n    );\n};\n\nPagination.propTypes = {\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    filtered: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    onSizeChange: PropTypes.func.isRequired,\n    onBtnClick: PropTypes.func.isRequired\n};\n\nexport default Pagination;\n","import Pagination from './Pagination.jsx';\n\nexport default Pagination;\n","import { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\n// MUI custom styles\nconst muiStyles = makeStyles(theme => ({\n    displayType: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexGrow: 1\n    },\n    mediaImg: {\n        margin: '0 auto',\n        marginBottom: theme.spacing(3)\n    },\n    details: {\n        marginBottom: theme.spacing(0.75),\n        padding: theme.spacing(1, 2)\n    }\n}));\n\nexport const DetailsSkeleton = () => {\n    const muiClasses = muiStyles();\n\n    return (\n        <Card className={muiClasses.displayType}>\n            <CardActionArea>\n                <CardContent>\n                    <Skeleton\n                        variant=\"circle\"\n                        width={120}\n                        height={120}\n                        className={muiClasses.mediaImg}\n                    />\n                    <Skeleton variant=\"text\" className={muiClasses.details} />\n                    <Skeleton variant=\"text\" className={muiClasses.details} />\n                    <Skeleton variant=\"text\" className={muiClasses.details} />\n                    <Skeleton variant=\"text\" className={muiClasses.details} />\n                </CardContent>\n            </CardActionArea>\n        </Card>\n    );\n};\n","import { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport Chip from '@material-ui/core/Chip';\nimport { DetailsSkeleton } from '../Skeletons';\n\n// MUI custom styles\nconst muiStyles = makeStyles(theme => ({\n    displayType: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexGrow: 1\n    },\n    card: {\n        '&:hover': {\n            transform: 'scale(1.05)',\n            transition: 'transform 0.5s'\n        }\n    },\n    cardActionArea: {\n        padding: theme.spacing(2, 0)\n    },\n    cardMediaContainer: {\n        height: theme.spacing(22.5),\n        width: theme.spacing(22.5),\n        margin: '0 auto',\n        overflow: 'hidden',\n        '& > img': {\n            height: '100%',\n            width: '100%'\n        },\n        [theme.breakpoints.down('sm')]: {\n            height: theme.spacing(22.5),\n            width: theme.spacing(22.5)\n        }\n    },\n    pokemonName: {\n        textTransform: 'capitalize',\n        fontSize: theme.spacing(2.5)\n    },\n    sizeSpec: {\n        flexDirection: 'row'\n    },\n    chipContainer: {\n        marginTop: theme.spacing(0.5),\n        '& .MuiChip-root': {\n            '&:not(:last-child)': {\n                marginRight: theme.spacing(1)\n            }\n        }\n    },\n    ml: {\n        marginLeft: theme.spacing(0.5)\n    },\n    dot: {\n        height: theme.spacing(0.5),\n        width: theme.spacing(0.5),\n        backgroundColor: theme.palette.text.secondary,\n        borderRadius: '50%',\n        margin: theme.spacing(0, 0.5, 0.75, 0.75)\n    }\n}));\n\nconst DetailsCard = props => {\n    const muiClasses = muiStyles();\n    const { pokemon, pokemaenApiUtils } = props;\n    const [details, setDetails] = useState({});\n\n    useEffect(() => {\n        const getPokemonByName = async () => {\n            try {\n                const res = await pokemaenApiUtils.getPokemonByName({\n                    pokemonName: pokemon.name\n                });\n                setDetails(res.data);\n            } catch (err) {\n                // Error occurred\n            }\n        };\n        getPokemonByName();\n\n        return () => {\n            setDetails({});\n        };\n    }, [pokemon, pokemaenApiUtils]);\n\n    const { name, height, weight, abilities, sprites } = details;\n    const handleOnClick = () => {\n        props.history.push(`/${name}`);\n    };\n\n    return Object.keys(details).length ? (\n        <Card className={muiClasses.card}>\n            <CardActionArea\n                className={muiClasses.cardActionArea}\n                onClick={handleOnClick}\n            >\n                <Box className={muiClasses.cardMediaContainer}>\n                    <CardMedia\n                        component=\"img\"\n                        image={sprites.other['official-artwork'].front_default}\n                        alt={name}\n                    />\n                </Box>\n                <CardContent>\n                    <Typography\n                        gutterBottom\n                        variant=\"h5\"\n                        component=\"div\"\n                        className={`${muiClasses.displayType} ${muiClasses.pokemonName}`}\n                    >\n                        {name}\n                    </Typography>\n                    <Box\n                        className={`${muiClasses.displayType} ${muiClasses.sizeSpec}`}\n                    >\n                        <Typography\n                            variant=\"body2\"\n                            color=\"textSecondary\"\n                            gutterBottom\n                        >\n                            Height:\n                        </Typography>\n                        <Typography\n                            variant=\"body2\"\n                            gutterBottom\n                            className={muiClasses.ml}\n                        >\n                            {`${height / 10}m`}\n                        </Typography>\n                        <Box component=\"span\" className={muiClasses.dot} />\n                        <Typography\n                            variant=\"body2\"\n                            color=\"textSecondary\"\n                            gutterBottom\n                            className={muiClasses.ml}\n                        >\n                            Weight:\n                        </Typography>\n                        <Typography\n                            variant=\"body2\"\n                            gutterBottom\n                            className={muiClasses.ml}\n                        >\n                            {`${weight / 10}kg`}\n                        </Typography>\n                    </Box>\n                    <Box className={muiClasses.displayType}>\n                        <Typography\n                            variant=\"subtitle1\"\n                            color=\"textSecondary\"\n                            component=\"div\"\n                        >\n                            Abilities\n                        </Typography>\n                        <Box className={muiClasses.chipContainer}>\n                            {abilities\n                                .filter(item => !item.is_hidden)\n                                .reduce((arr, { ability: { name } }) => {\n                                    let capChartAt0 = '';\n                                    if (name.includes('-')) {\n                                        capChartAt0 = name\n                                            .split('-')\n                                            .map(\n                                                ab =>\n                                                    `${ab\n                                                        .slice(0, 1)\n                                                        .toUpperCase()}${ab\n                                                        .slice(1)\n                                                        .toLowerCase()}`\n                                            )\n                                            .join(' ');\n                                    } else {\n                                        capChartAt0 = `${name\n                                            .slice(0, 1)\n                                            .toUpperCase()}${name\n                                            .slice(1)\n                                            .toLowerCase()}`;\n                                    }\n                                    arr.push(capChartAt0);\n\n                                    return arr;\n                                }, [])\n                                .map(able => (\n                                    <Chip\n                                        key={`${able}-${Math.random()\n                                            .toString()\n                                            .slice(0, 6)}`}\n                                        label={able}\n                                        color=\"primary\"\n                                        variant=\"outlined\"\n                                        size=\"small\"\n                                    />\n                                ))}\n                        </Box>\n                    </Box>\n                </CardContent>\n            </CardActionArea>\n        </Card>\n    ) : (\n        <DetailsSkeleton />\n    );\n};\n\nDetailsCard.propTypes = {\n    pokemon: PropTypes.object.isRequired,\n    pokemaenApiUtils: PropTypes.object.isRequired\n};\n\nexport default withRouter(DetailsCard);\n","import DetailsCard from './DetailsCard.jsx';\n\nexport default DetailsCard;\n","import Cards from './Cards.jsx';\n\nexport default Cards;\n","import PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport DetailsCard from '../DetailsCard';\nimport { DetailsSkeleton } from '../Skeletons';\n\nconst Cards = props => {\n    const { filtered, pokemaenApiUtils } = props;\n\n    return (\n        <Grid container spacing={2}>\n            {filtered && filtered.results && filtered.results.length\n                ? filtered.results.map(pokemon => (\n                      <Grid\n                          item\n                          xs={12}\n                          sm={6}\n                          md={2}\n                          key={Math.random().toString().slice(0, 6)}\n                      >\n                          <DetailsCard\n                              pokemon={pokemon}\n                              pokemaenApiUtils={pokemaenApiUtils}\n                          />\n                      </Grid>\n                  ))\n                : [...new Array(12)].fill(0).map(() => (\n                      <Grid\n                          item\n                          xs={12}\n                          sm={6}\n                          md={2}\n                          key={Math.random().toString().slice(0, 6)}\n                      >\n                          <DetailsSkeleton />\n                      </Grid>\n                  ))}\n        </Grid>\n    );\n};\n\nCards.propTypes = {\n    filtered: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    pokemaenApiUtils: PropTypes.object.isRequired\n};\n\nexport default Cards;\n","import Q from 'q';\n/**\n * Utility method derived from API endpoints.\n * @class PokemaenApiUtils\n * @param {(string|object)} [domainOrOptions] - The project domain or options object. If object, see the object's optional properties.\n * @param {string} [domainOrOptions.domain] - The project domain\n * @param {object} [domainOrOptions.token] - auth token - object with value property and optional headerOrQueryName and isQuery properties\n */\nconst PokemaenApiUtils = (function () {\n    function PokemaenApiUtils(options) {\n        this.domain = process.env.REACT_APP_POKEAPI_URL;\n        if (this.domain.length === 0) {\n            throw new Error('Domain parameter must be specified as a string.');\n        }\n        this.apiKey =\n            typeof options === 'object'\n                ? options.apiKey\n                    ? options.apiKey\n                    : {}\n                : {};\n    }\n\n    function serializeQueryParams(parameters) {\n        let str = [];\n        for (let p in parameters) {\n            if (parameters.hasOwnProperty(p)) {\n                str.push(\n                    encodeURIComponent(p) +\n                        '=' +\n                        encodeURIComponent(parameters[p])\n                );\n            }\n        }\n        return str.join('&');\n    }\n\n    function mergeQueryParams(parameters, queryParameters) {\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function (\n                parameterName\n            ) {\n                let parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        return queryParameters;\n    }\n\n    /**\n     * HTTP Request\n     * @method\n     * @name PokemaenApiUtils#request\n     * @param {string} method - http method\n     * @param {string} url - url to do request\n     * @param {object} parameters\n     * @param {object} body - body parameters / object\n     * @param {object} headers - header parameters\n     * @param {object} queryParameters - querystring parameters\n     * @param {object} form - form data object\n     * @param {object} deferred - promise object\n     */\n    PokemaenApiUtils.prototype.request = function (\n        method,\n        url,\n        parameters,\n        body,\n        headers,\n        queryParameters,\n        form,\n        deferred\n    ) {\n        const queryParams =\n            queryParameters && Object.keys(queryParameters).length\n                ? serializeQueryParams(queryParameters)\n                : null;\n        const urlWithParams = url + (queryParams ? '?' + queryParams : '');\n\n        if (body && !Object.keys(body).length) {\n            body = undefined;\n        }\n\n        fetch(urlWithParams, {\n            method,\n            headers,\n            body: JSON.stringify(body)\n        })\n            .then(async response => {\n                let res = {\n                    data: response.json(),\n                    ok: response.ok,\n                    status: response.status,\n                    statusText: response.statusText\n                };\n                const data = await res.data;\n                res = {\n                    ...res,\n                    data\n                };\n                if (!response.ok) {\n                    throw res;\n                } else {\n                    return res;\n                }\n            })\n            .then(body => {\n                deferred.resolve(body);\n            })\n            .catch(error => {\n                deferred.reject(error);\n            });\n    };\n\n    /**\n     * API endpoint to get all pokemons\n     * @method\n     * @name PokemaenApiUtils#getAllPokemons\n     * @param {object} parameters - method options and parameters\n     * @param {string} parameters.limit - Query string to get number of pokemons\n     * @param {object} parameters.offset - Query string to skip number of pokemons\n     */\n    PokemaenApiUtils.prototype.getAllPokemons = function (parameters) {\n        if (parameters === undefined) {\n            parameters = {};\n        }\n        let deferred = Q.defer();\n        let domain = this.domain,\n            path = '/';\n        let body = {},\n            queryParameters = {},\n            headers = {},\n            form = {};\n\n        headers['Accept'] = ['application/json'];\n        headers['Content-Type'] = ['application/json'];\n\n        if (parameters['limit'] !== undefined) {\n            queryParameters['limit'] = parameters['limit'];\n        }\n\n        if (parameters['offset'] !== undefined) {\n            queryParameters['offset'] = parameters['offset'];\n        }\n\n        queryParameters = mergeQueryParams(parameters, queryParameters);\n\n        this.request(\n            'GET',\n            domain + path,\n            parameters,\n            body,\n            headers,\n            queryParameters,\n            form,\n            deferred\n        );\n\n        return deferred.promise;\n    };\n    /**\n     * API endpoint to get pokemon details by its name\n     * @method\n     * @name PokemaenApiUtils#getPokemonByName\n     * @param {object} parameters - method options and parameters\n     * @param {string} parameters.pokemonName - path parameter to get pokemon details by its name\n     */\n    PokemaenApiUtils.prototype.getPokemonByName = function (parameters) {\n        if (parameters === undefined) {\n            parameters = {};\n        }\n        let deferred = Q.defer();\n        let domain = this.domain,\n            path = '/{pokemon_name}';\n        let body = {},\n            queryParameters = {},\n            headers = {},\n            form = {};\n\n        headers['Accept'] = ['application/json'];\n        headers['Content-Type'] = ['application/json'];\n\n        path = path.replace('{pokemon_name}', parameters['pokemonName']);\n\n        if (parameters['pokemonName'] === undefined) {\n            deferred.reject(\n                new Error('Missing required parameter: pokemonName')\n            );\n            return deferred.promise;\n        }\n\n        queryParameters = mergeQueryParams(parameters, queryParameters);\n\n        this.request(\n            'GET',\n            domain + path,\n            parameters,\n            body,\n            headers,\n            queryParameters,\n            form,\n            deferred\n        );\n\n        return deferred.promise;\n    };\n\n    return PokemaenApiUtils;\n})();\n\nexport default PokemaenApiUtils;\n","import { useEffect, useState } from 'react';\nimport _ from 'lodash/fp';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Filters from '../Filters';\nimport Pagination from '../Pagination';\nimport Cards from '../Cards';\nimport PokemaenApiUtils from '../../assets/utils/apiEndpointMethods';\n\n// Init API util class\nconst pokemaenApiUtils = new PokemaenApiUtils();\n// MUI custom styles\nconst muiStyles = makeStyles(theme => ({\n    mainContainer: {\n        display: 'flex',\n        flexDirection: 'column',\n        margin: 0,\n        padding: 0\n    },\n    displayType: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexGrow: 1\n    },\n    topContent: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        padding: theme.spacing(4, 4, 1),\n        [theme.breakpoints.down('sm')]: {\n            padding: theme.spacing(2)\n        }\n    },\n    mainGridContainer: {\n        [theme.breakpoints.down('sm')]: {\n            flexDirection: 'column'\n        }\n    },\n    filtersContainer: {\n        flexDirection: 'row',\n        [theme.breakpoints.down('sm')]: {\n            '& .MuiGrid-root': {\n                '&:not(:last-child)': {\n                    marginBottom: theme.spacing(2.5)\n                }\n            }\n        },\n        [theme.breakpoints.down('xs')]: {\n            '& .MuiGrid-root': {\n                '&:not(:last-child)': {\n                    marginBottom: theme.spacing(1.75)\n                }\n            }\n        }\n    },\n    paginationGridItem: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n    },\n    middleContent: {\n        padding: theme.spacing(2, 4, 1),\n        [theme.breakpoints.down('sm')]: {\n            padding: theme.spacing(2)\n        }\n    },\n    bottomContent: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        padding: theme.spacing(1, 4, 4),\n        [theme.breakpoints.down('sm')]: {\n            padding: theme.spacing(2)\n        }\n    }\n}));\n\nconst Home = props => {\n    const muiClasses = muiStyles();\n    const [pokemons, setPokemons] = useState(null);\n    const [filtered, setFiltered] = useState(null);\n    const [limit, setLimit] = useState(10);\n    const [offset, setOffset] = useState(0);\n\n    useEffect(() => {\n        const getAllPokemons = async () => {\n            try {\n                const res = await pokemaenApiUtils.getAllPokemons({\n                    limit,\n                    offset\n                });\n                setPokemons(res.data);\n                setFiltered(res.data);\n            } catch (err) {\n                // Error occurred\n            }\n        };\n        getAllPokemons();\n    }, [limit, offset]);\n\n    const handleSearchChange = newResults => {\n        if (pokemons) {\n            const newPokemons = _.cloneDeep(pokemons);\n            setFiltered({\n                ...newPokemons,\n                results: newResults\n            });\n        }\n    };\n    const handleSortByChange = newResults => {\n        if (pokemons) {\n            const newPokemons = _.cloneDeep(pokemons);\n            setFiltered({\n                ...newPokemons,\n                results: newResults\n            });\n        }\n    };\n    const handlePageSizeChange = newLimit => {\n        setLimit(newLimit);\n    };\n    const handlePrevNext = newOffset => {\n        setOffset(newOffset);\n    };\n\n    return (\n        <div className={muiClasses.mainContainer}>\n            <div\n                className={`${muiClasses.displayType} ${muiClasses.topContent}`}\n            >\n                <Grid\n                    container\n                    spacing={2}\n                    className={muiClasses.mainGridContainer}\n                >\n                    <Grid\n                        container\n                        item\n                        xs={12}\n                        md={8}\n                        className={`${muiClasses.displayType} ${muiClasses.filtersContainer}`}\n                    >\n                        <Filters\n                            pokemons={pokemons}\n                            filtered={filtered}\n                            onSearchChange={handleSearchChange}\n                            onSortByChange={handleSortByChange}\n                        />\n                    </Grid>\n                    <Grid\n                        item\n                        xs={12}\n                        md={4}\n                        className={muiClasses.paginationGridItem}\n                    >\n                        <Pagination\n                            limit={limit}\n                            offset={offset}\n                            filtered={filtered}\n                            onSizeChange={handlePageSizeChange}\n                            onBtnClick={handlePrevNext}\n                        />\n                    </Grid>\n                </Grid>\n            </div>\n            <div\n                className={`${muiClasses.displayType} ${muiClasses.middleContent}`}\n            >\n                <Cards\n                    filtered={filtered}\n                    pokemaenApiUtils={pokemaenApiUtils}\n                />\n            </div>\n            <div\n                className={`${muiClasses.displayType} ${muiClasses.bottomContent}`}\n            >\n                <Pagination\n                    limit={limit}\n                    offset={offset}\n                    filtered={filtered}\n                    onSizeChange={handlePageSizeChange}\n                    onBtnClick={handlePrevNext}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default Home;\n","import Home from './Home.jsx';\n\nexport default Home;\n","import { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport Chip from '@material-ui/core/Chip';\nimport Button from '@material-ui/core/Button';\nimport KeyboardBackspaceIcon from '@material-ui/icons/KeyboardBackspace';\nimport { DetailsSkeleton } from '../Skeletons';\nimport PokemaenApiUtils from '../../assets/utils/apiEndpointMethods';\n\n// Init API util class\nconst pokemaenApiUtils = new PokemaenApiUtils();\n// MUI custom styles\nconst muiStyles = makeStyles(theme => ({\n    displayType: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexGrow: 1\n    },\n    card: {\n        width: '60%',\n        position: 'fixed',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        [theme.breakpoints.down('sm')]: {\n            width: '94%'\n        }\n    },\n    cardActionArea: {\n        justifyContent: 'space-evenly',\n        height: `calc(100vh - ${theme.spacing(8)}px)`,\n        padding: theme.spacing(2, 0),\n        position: 'relative'\n    },\n    cardMediaContainer: {\n        height: theme.spacing(30),\n        width: theme.spacing(30),\n        border: '4px solid #00ff00',\n        borderRadius: '50%',\n        margin: '0 auto',\n        padding: theme.spacing(2),\n        overflow: 'hidden',\n        '& > img': {\n            height: '100%',\n            width: '100%'\n        },\n        [theme.breakpoints.down('sm')]: {\n            height: theme.spacing(40),\n            width: theme.spacing(40)\n        },\n        [theme.breakpoints.down('xs')]: {\n            height: theme.spacing(25),\n            width: theme.spacing(25)\n        }\n    },\n    pokemonName: {\n        textTransform: 'capitalize',\n        fontSize: theme.spacing(4),\n        marginBottom: theme.spacing(4)\n    },\n    sizeSpec: {\n        flexDirection: 'row'\n    },\n    chipContainer: {\n        marginTop: theme.spacing(0.5),\n        '& .MuiChip-root': {\n            '&:not(:last-child)': {\n                marginRight: theme.spacing(1)\n            }\n        }\n    },\n    ml: {\n        marginLeft: theme.spacing(0.5)\n    },\n    dot: {\n        height: theme.spacing(0.5),\n        width: theme.spacing(0.5),\n        backgroundColor: theme.palette.text.secondary,\n        borderRadius: '50%',\n        margin: theme.spacing(0, 0.5, 0.75, 0.75)\n    },\n    backToHome: {\n        position: 'absolute',\n        top: '5%',\n        left: '5%'\n    }\n}));\n\nconst DetailInfo = props => {\n    const muiClasses = muiStyles();\n    const pokemonName =\n        (props.match && props.match.params && props.match.params.pname) || '';\n    const [details, setDetails] = useState({});\n\n    useEffect(() => {\n        const getPokemonByName = async () => {\n            try {\n                const res = await pokemaenApiUtils.getPokemonByName({\n                    pokemonName\n                });\n                setDetails(res.data);\n            } catch (err) {\n                // Error occurred\n            }\n        };\n        getPokemonByName();\n\n        return () => {\n            setDetails({});\n        };\n    }, [pokemonName]);\n\n    const { name, height, weight, abilities, sprites } = details;\n    const handleBackToHome = () => {\n        props.history.push('/');\n    };\n\n    return Object.keys(details).length ? (\n        <Card className={muiClasses.card}>\n            <CardActionArea\n                className={`${muiClasses.displayType} ${muiClasses.cardActionArea}`}\n            >\n                <Box className={muiClasses.cardMediaContainer}>\n                    <CardMedia\n                        component=\"img\"\n                        image={sprites.other['official-artwork'].front_default}\n                        alt={name}\n                    />\n                </Box>\n                <CardContent>\n                    <Typography\n                        gutterBottom\n                        variant=\"h5\"\n                        component=\"div\"\n                        className={`${muiClasses.displayType} ${muiClasses.pokemonName}`}\n                    >\n                        {name}\n                    </Typography>\n                    <Box\n                        className={`${muiClasses.displayType} ${muiClasses.sizeSpec}`}\n                    >\n                        <Typography\n                            variant=\"body2\"\n                            color=\"textSecondary\"\n                            gutterBottom\n                        >\n                            Height:\n                        </Typography>\n                        <Typography\n                            variant=\"body2\"\n                            gutterBottom\n                            className={muiClasses.ml}\n                        >\n                            {`${height / 10}m`}\n                        </Typography>\n                        <Box component=\"span\" className={muiClasses.dot} />\n                        <Typography\n                            variant=\"body2\"\n                            color=\"textSecondary\"\n                            gutterBottom\n                            className={muiClasses.ml}\n                        >\n                            Weight:\n                        </Typography>\n                        <Typography\n                            variant=\"body2\"\n                            gutterBottom\n                            className={muiClasses.ml}\n                        >\n                            {`${weight / 10}kg`}\n                        </Typography>\n                    </Box>\n                    <Box className={muiClasses.displayType}>\n                        <Typography\n                            variant=\"subtitle1\"\n                            color=\"textSecondary\"\n                            component=\"div\"\n                        >\n                            Abilities\n                        </Typography>\n                        <Box className={muiClasses.chipContainer}>\n                            {abilities\n                                .filter(item => !item.is_hidden)\n                                .reduce((arr, { ability: { name } }) => {\n                                    let capChartAt0 = '';\n                                    if (name.includes('-')) {\n                                        capChartAt0 = name\n                                            .split('-')\n                                            .map(\n                                                ab =>\n                                                    `${ab\n                                                        .slice(0, 1)\n                                                        .toUpperCase()}${ab\n                                                        .slice(1)\n                                                        .toLowerCase()}`\n                                            )\n                                            .join(' ');\n                                    } else {\n                                        capChartAt0 = `${name\n                                            .slice(0, 1)\n                                            .toUpperCase()}${name\n                                            .slice(1)\n                                            .toLowerCase()}`;\n                                    }\n                                    arr.push(capChartAt0);\n\n                                    return arr;\n                                }, [])\n                                .map(able => (\n                                    <Chip\n                                        key={`${able}-${Math.random()\n                                            .toString()\n                                            .slice(0, 6)}`}\n                                        label={able}\n                                        color=\"primary\"\n                                        variant=\"outlined\"\n                                        size=\"small\"\n                                    />\n                                ))}\n                        </Box>\n                    </Box>\n                </CardContent>\n                <Button\n                    variant=\"text\"\n                    component=\"div\"\n                    startIcon={<KeyboardBackspaceIcon />}\n                    className={muiClasses.backToHome}\n                    onClick={handleBackToHome}\n                >\n                    Home\n                </Button>\n            </CardActionArea>\n        </Card>\n    ) : (\n        <DetailsSkeleton />\n    );\n};\n\nexport default DetailInfo;\n","import DetailInfo from './DetailInfo.jsx';\n\nexport default DetailInfo;\n","import { makeStyles } from '@material-ui/core/styles';\n\n// MUI custom styles\nconst muiStyles = makeStyles(theme => ({\n    displayType: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexGrow: 1,\n        height: `calc(100vh - ${theme.spacing(4)}px)`\n    },\n    img: {\n        height: theme.spacing(30),\n        width: theme.spacing(30),\n        backgroundImage: `url(${\n            require('../../assets/images/broken-pokeball.png').default\n        })`,\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        overflow: 'hidden'\n    },\n    text: {\n        marginTop: theme.spacing(4),\n        padding: theme.spacing(1, 2),\n        fontSize: theme.spacing(4),\n        color: 'orange'\n    }\n}));\n\nconst NotFound = () => {\n    const muiClasses = muiStyles();\n\n    return (\n        <div className={muiClasses.displayType}>\n            <div className={muiClasses.img}></div>\n            <div className={muiClasses.text}>Uh-oh! Page not found</div>\n        </div>\n    );\n};\n\nexport default NotFound;\n","import NotFound from './NotFound.jsx';\n\nexport default NotFound;\n","import App from './App.jsx';\n\nexport default App;\n","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Home from '../Home';\nimport DetailInfo from '../DetailInfo';\nimport NotFound from '../NotFound';\n\nconst App = () => (\n    <Router basename={process.env.PUBLIC_URL}>\n        <CssBaseline />\n        <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/:pname\" component={DetailInfo} />\n            <Route component={NotFound} />\n        </Switch>\n    </Router>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.scss';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}